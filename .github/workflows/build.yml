name: Build DisplaySwitcher

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  build:
    name: Build DisplaySwitcher
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: List available Xcode versions
      run: ls /Applications/ | grep Xcode
      
    - name: Select Xcode version
      run: |
        # Try Xcode 16.x versions in order of preference
        if [ -d "/Applications/Xcode_16.4.app" ]; then
          sudo xcode-select -s /Applications/Xcode_16.4.app/Contents/Developer
        elif [ -d "/Applications/Xcode_16.1.app" ]; then
          sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer
        elif [ -d "/Applications/Xcode_16.0.app" ]; then
          sudo xcode-select -s /Applications/Xcode_16.0.app/Contents/Developer
        else
          echo "Using default Xcode version"
        fi
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Build app
      run: |
        xcodebuild \
          -project DisplaySwitcher.xcodeproj \
          -scheme DisplaySwitcher \
          -configuration Release \
          -derivedDataPath ./build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          build
          
    - name: Create app bundle
      run: |
        mkdir -p ./artifacts
        cp -R ./build/Build/Products/Release/DisplaySwitcher.app ./artifacts/
        
    - name: Create DMG (if on release)
      if: github.event_name == 'release'
      run: |
        # Create a temporary DMG directory
        mkdir -p ./dmg-temp
        cp -R ./artifacts/DisplaySwitcher.app ./dmg-temp/
        
        # Create DMG
        hdiutil create -volname "DisplaySwitcher" -srcfolder ./dmg-temp -ov -format UDZO ./artifacts/DisplaySwitcher.dmg
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DisplaySwitcher-${{ github.sha }}
        path: ./artifacts/
        retention-days: 30
        
    - name: Upload release assets
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifacts/DisplaySwitcher.dmg
        asset_name: DisplaySwitcher.dmg
        asset_content_type: application/x-apple-diskimage


